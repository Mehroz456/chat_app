{"version":3,"sources":["config/firebase.js","containers/Home/index.js","store/action/index.js","App.js","reportWebVitals.js","store/reducer/index.js","store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Home","className","onClick","props","facebook_login","state","console","log","React","Component","connect","users","dispatch","set_data","data","type","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","credential","accessToken","user","catch","error","code","errorMessage","message","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","name","email","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"mRAeeA,G,YAAAA,IAASC,cAXH,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBCPXC,G,6KAQO,IAAD,OAEV,OACE,gCACI,oBAAIC,UAAY,MAAhB,kBACA,wBAAQC,QAAS,kBAAM,EAAKC,MAAMC,kBAAlC,4BAFJ,a,gDATgCD,EAAME,GAElC,OADAC,QAAQC,IAAI,WAAWJ,GACjB,O,GAJKK,IAAMC,YA2BVC,eAVS,SAACL,GAAD,MAAY,CAChCM,MAAON,EAAMM,UAGS,SAACC,GAAD,MAAe,CACrCC,SAAU,SAACC,GAAD,OAAUF,ECzBP,SAACE,GACd,OAAO,SAACF,GACJN,QAAQC,IAAIO,GACZF,EAAS,CAACG,KAAM,UAAWD,KAAMA,KDsBRD,KAC7BT,eAAgB,kBAAMQ,GCjBf,SAACA,GACJ,IAAII,EAAW,IAAI1B,EAAS2B,KAAKC,qBAEjC5B,EAAS2B,OAAOE,gBAAgBH,GAAUI,MAAK,SAASC,GACxCA,EAAOC,WAAWC,YAA9B,IACIC,EAAOH,EAAOG,KAElBlB,QAAQC,IAAI,UAAUiB,MAErBC,OAAM,SAASC,GACAA,EAAMC,KAAtB,IACIC,EAAeF,EAAMG,QACzBvB,QAAQC,IAAIqB,aDSTlB,CAA4CV,GEnB5C8B,G,6KAPb,OACE,8BACI,cAAC,EAAD,U,GAJUtB,IAAMC,YCQTsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCPRO,EAAgB,CAClB5B,MAAM,CAAC,CACH6B,KAAK,SACLC,MAAM,oB,eCICC,EAHDC,aDGC,WAAkC,IAAjCtC,EAAgC,uDAAxBkC,EAAeK,EAAS,uCAC5C,OAAQA,EAAO7B,MACX,IAAK,UACD,kCACOV,GADP,IAEIM,MAAM,GAAD,mBAAMN,EAAMM,OAAZ,CAAkBiC,EAAO9B,SAEtC,QACI,OAAOT,KCXewC,YAAgBC,MCMlDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.642b2eaf.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/database'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAuLpmjZD86qEhsnHsOGDRqDwTqKxkVWVA\",\n  authDomain: \"chat-app-bf67e.firebaseapp.com\",\n  databaseURL: \"https://chat-app-bf67e.firebaseio.com\",\n  projectId: \"chat-app-bf67e\",\n  storageBucket: \"chat-app-bf67e.appspot.com\",\n  messagingSenderId: \"915630136742\",\n  appId: \"1:915630136742:web:622c223daaabecdbfac367\",\n  measurementId: \"G-GHDM5Z73CH\"\n};\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {set_data, facebook_login} from '../../store/action'\nimport './style.css';\n\nclass Home extends React.Component{\n\n    static getDerivedStateFromProps(props,state){\n        console.log(\"props==>\",props)\n        return{\n\n        }\n    }\n    render(){  \n      let user = {name: \"Ken Adams\", email: \"mehroz@gmail.com\"}\n  return (\n    <div>\n        <h1 className = \"boo\">Home</h1>\n        <button onClick={() => this.props.facebook_login()}>Facebook Login</button>    </div> \n  );\n}}\n\nconst mapStateToProps = (state) => ({\n    users: state.users\n})\n\nconst mapDispatchToProp = (dispatch) => ({\n    set_data: (data) => dispatch(set_data()),\n    facebook_login: () => dispatch(facebook_login()),\n    \n})\n\nexport default connect(mapStateToProps, mapDispatchToProp)(Home);\n","import firebase from '../../config/firebase'\n\nconst set_data = (data) => {\n    return (dispatch) => {\n        console.log(data);\n        dispatch({type: \"SETDATA\", data: data})\n    }\n}\n\n\nconst facebook_login = () => {\n    return (dispatch) => {\n        var provider = new firebase.auth.FacebookAuthProvider();\n\n        firebase.auth().signInWithPopup(provider).then(function(result) {\n            var token = result.credential.accessToken;\n            var user = result.user;\n\n            console.log(\"user==>\",user);\n\n          }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorMessage);\n          });\n          \n    }\n}\n\n\n\n\nexport {\n    set_data,\n    facebook_login\n}","import React from 'react';\nimport Home from './containers/Home'\nimport './App.css';\n\nclass App extends React.Component{\n  render(){  \n  return (\n    <div>\n        <Home />\n    </div>\n  );\n}}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\n    users:[{\n        name:\"mehroz\",\n        email:\"blah@gmail.com\"\n    }]\n  }\n  \nexport default (state = INITIAL_STATE, action)=>{\n    switch (action.type){\n        case \"SETDATA\":\n            return({\n                ...state,\n                users: [...state.users,action.data]\n            })\n        default:\n            return state;\n    }\n}","import reducer from './reducer';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from \"./store\"\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}